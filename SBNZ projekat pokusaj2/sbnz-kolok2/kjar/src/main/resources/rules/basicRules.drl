package rules;

import com.ftn.sbnz.model.*;
import java.time.LocalDateTime;



rule "opasan vozac"
    when
        $v: Vozac($brojVozackeDozvole: brojVozackeDozvole)
        $total: Number() from accumulate(
            $k1: Kazna($regBr: registarskiBrojVozila, istekla == false, $brojVozackeDozvole == brojVozackeDozvole, 
            $brKaznenihBodova: brojKaznenihBodova),
            sum($brKaznenihBodova))
        eval($total.intValue() >= 14 && $total.intValue() <= 17)
    then
        System.out.println("-----------Usla sam u privremeno oduzimanje vozacke-----------");
        insert(new OduzimanjeVozacke($brojVozackeDozvole, 12));
end


rule "trajno oduzimanje vozacke"
    when
        $v: Vozac($brojVozackeDozvole: brojVozackeDozvole, $brOduzimanja: brojOduzimanjeVozacke)
        $total: Number() from accumulate(
            $k1: Kazna($regBr: registarskiBrojVozila, istekla == false, $brojVozackeDozvole == brojVozackeDozvole, 
            $brKaznenihBodova: brojKaznenihBodova),
            sum($brKaznenihBodova))
            eval($total.intValue() >= 18 - 3 * $brOduzimanja)
    then
        System.out.println("-----------Usla sam u trajno oduzimanje-----------");
        modify ($v) { setBrojVozackeDozvole("") };
        modify ($v) { povecajBrojOduzimanjaVozacke() };   
end


rule "vjecno oduzimanje vozacke dozvole"
    when
        $v: Vozac(brojOduzimanjeVozacke==3, $brVoz : brojVozackeDozvole, vjecnoBlokiran==false)
    then
        System.out.println("----------Usla sam u vjecno oduzimanje vozacke------------");
        modify ($v) { setBrojVozackeDozvole("XXX" + $brVoz) };
        modify ($v) { setVjecnoBlokiran(true) };
end


rule "brisanje kaznenih bodova nakon 2 godine"
    when
        $k: Kazna(datum.isBefore(LocalDateTime.now().minusYears(2)))
    then
        System.out.println("----------Usla sam u brisanje kaznenih bodova------------");
        modify ($k) { setIstekla(true) };
end


rule "vozac nije platio kaznu i ne moze da se pretvori u kaznu zatvora"
    when
        // ako je kazna imala novcanu vrijednost> 60 000, proslo je pola godine od izricanja, a polje za datum placanja je idalje nepopunjeno 
        $k: Kazna(novcanaKazna > 60000, datum.isBefore(LocalDateTime.now().minusMonths(6)),
        /*datum meets[15552000s] LocalDateTime.now(),*/
         vremePlacanja==null,
        $id: id, $regBr: registarskiBrojVozila, $brVoz: brojVozackeDozvole, $iznos: novcanaKazna
        )
        not IzvrsiteljskiPostupak(idKazne==$id);
    then
        System.out.println("----------Nasla sam vozaca koji nije platio kaznu, i ne moze u zatvor------------");
        System.out.println(LocalDateTime.now());
        insert(new IzvrsiteljskiPostupak($id, $brVoz, $iznos));
        modify ($k) { setIstekla(true) };
end



rule "vozac nije platio kaznu, ali moze da se pretvori u kaznu zatvora"
    when
        // ako je kazna imala novcanu vrijednost, proslo je pola godine od izricanja, a polje za datum placanja je idalje nepopunjeno 
        $k: Kazna(novcanaKazna > 0, novcanaKazna <= 60000, datum.isBefore(LocalDateTime.now().minusMonths(6)), vremePlacanja==null,
        $id: id, $regBr: registarskiBrojVozila, $brVoz: brojVozackeDozvole, $iznos: novcanaKazna
        )
        not Kazna(id=="neplaceno" + $id);
    then
        System.out.println("----------Nasla sam vozaca koji nije platio kaznu, i moze u zatvor------------");
        System.out.println(LocalDateTime.now().minusMonths(6));
        insert(new Kazna("neplaceno" + $id, $regBr, $brVoz, 0, 0, Math.ceil((double) $iznos / 1000)));
        modify ($k) { setIstekla(true) };
end


rule "vozac je vozio sa nevazecom vozackom dozvolom"
    when
    // ako je vozacka oduzeta prije manje od sada - broj mjeseci koliko vazi oduzimanje 
        $o: OduzimanjeVozacke(datum.isAfter(LocalDateTime.now().minusMonths(brojMeseci)), $brVoz: brojVozackeDozvole, $datumOduzimanja: datum)
        $p: PodaciSaRadaraDTO($regBrRadar: registarskiBrojVozila, datum.isAfter($datumOduzimanja))
        // ako postoji vozac ciji je auto uhvacen na radaru, a on ima oduzetu vozacku
        $v: Vozilo(brojVozackeDozvoleVozaca==$brVoz, registarskiBrojVozila==$regBrRadar)
    then
        System.out.println("----------Nasla sam vozaca koji je vozio sa privremeno oduzetom vozackom------------");
        insert(new Kazna($regBrRadar, $brVoz, 100000, 14, 15));
end


rule "vozac je vozio sa trajno oduzetom vozackom dozvolom"
    when
        $p: PodaciSaRadaraDTO($regBrRadar: registarskiBrojVozila)
        $v: Vozilo($brVoz: brojVozackeDozvoleVozaca, brojVozackeDozvoleVozaca.startsWith("XXX"), registarskiBrojVozila==$regBrRadar)
    then
        System.out.println("----------Nasla sam vozaca koji je vozio sa zauvijek oduzetom vozackom------------");
        insert(new Kazna($regBrRadar, $brVoz, 100000, 14, 15));
end


rule "zatrazi kreiranje prve kaznu"
    when
        $z1: ZahtevZaKaznu($regBr: registarskiBrojVozila, $sifraKaz: sifraKazne, tipZahtevaZaKaznu == "NEDODELJEN")
        Number(intValue==1) from accumulate(
            $z2: ZahtevZaKaznu(registarskiBrojVozila==$regBr)
            over window:time(15m), count($z2)
        )
    then
        System.out.println("----------Usla sam u dodjelu prve kazne------------");
        modify ($z1) { setTipZahtevaZaKaznu("DODELI_KAZNU") };
end



rule "preskoci drugu kaznu"
    when
        $z1: ZahtevZaKaznu($regBr: registarskiBrojVozila, $sifraKaz: sifraKazne, tipZahtevaZaKaznu == "NEDODELJEN")
        Number(intValue==2) from accumulate(
            $z2: ZahtevZaKaznu(registarskiBrojVozila==$regBr)
            over window:time(15m), count($z2)
        )
    then
        System.out.println("----------Usla sam u preskakanje druge kazne------------");
        modify ($z1) { setTipZahtevaZaKaznu("NE_DODELJUJ_KAZNU") };
end



rule "posalji patrolu"
    when
        $z1: ZahtevZaKaznu($regBr: registarskiBrojVozila, $sifraKaz: sifraKazne, tipZahtevaZaKaznu == "NEDODELJEN")
        Number(intValue>2) from accumulate(
            $z2: ZahtevZaKaznu(registarskiBrojVozila==$regBr)
            over window:time(1h), count($z2)
        )
    then
        System.out.println("----------Usla sam u slanje patrole------------");
        modify ($z1) { setTipZahtevaZaKaznu("POSALJI_PATROLU") };
end


rule "posalji opis patroli"
    when
        $z1: ZahtevZaKaznu($regBr: registarskiBrojVozila, $sifraKaz: sifraKazne, tipZahtevaZaKaznu == "POSALJI_PATROLU")
        $v: Vozilo(registarskiBrojVozila== $regBr, $boj: boja, $mod: model, $mark: marka, $vozacka: brojVozackeDozvoleVozaca)
        not (Patrola(registarskiBrojVozila==$regBr))
    then
        System.out.println("---------Usla sam u slanje opisa patroli------------");
        insert(new Patrola($regBr, $boj, $mark, $mod));
end


rule "brisanje starijih patrola"
    when
        $p: Patrola(datum.isBefore(LocalDateTime.now().minusHours(6)))
    then
        System.out.println("----------Usla sam u brisnaje starih patrola------------");
        delete ($p);
end




